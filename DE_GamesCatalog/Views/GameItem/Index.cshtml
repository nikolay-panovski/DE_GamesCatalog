@model IEnumerable<DE_GamesCatalog.Models.GameItemModel>

@{
    ViewData["Title"] = "View";
}

<h1>View</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="container px-3">
    <div class="row row-cols-3 g-2 g-lg-3">
        @for (int i = 0; i < Model.Count(); i++)
        {
            DE_GamesCatalog.Models.GameItemModel item = Model.ElementAt(i);

        <div class="col">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="card-title">@item.name</h5>
                    <p class="card-text">@item.genre</p>
                </div>
                <img src="@item.imageURL" class="card-img" alt="Game cover image for @item.name">
                <div class="card-body">
                    <p class="card-text">@item.shortDescription</p>
                </div>
                <div class="card-body">
                    <!-- keep section for details page? -->
                    <p class="card-text ">@Html.DisplayNameFor(model => model.gameplayDensity)</p>
                    <!-- <input id="input-id" type="text" class="rating" data-size="lg"> by default -->
                    <input id="input-id-gd-@i" type="text" value="@item.gameplayDensity" data-size="lg"
                           data-displayonly=true data-min="0" data-max="5" data-step="0.1">
                        <!-- would be good: data-min and data-max extracted with Html helper from model's RangeAttribute -->
                    <p class="card-text ">@Html.DisplayNameFor(model => model.RNGDensity)</p>
                    <input id="input-id-rng-@i" type="text" value="@item.RNGDensity" data-size="lg"
                           data-displayonly=true data-min="0" data-max="5" data-step="0.1">
                    <p class="card-text ">@Html.DisplayNameFor(model => model.glitchesAmount)</p>
                    <input id="input-id-gl-@i" type="text" value="@item.glitchesAmount" data-size="lg"
                           data-displayonly=true data-min="0" data-max="5" data-step="0.1">
                    <p class="card-text ">@Html.DisplayNameFor(model => model.valueForMoney)</p>
                    <input id="input-id-val-@i" type="text" value="@item.valueForMoney" data-size="lg"
                           data-displayonly=true data-min="0" data-max="5" data-step="0.1">
                </div>
                <div class="card-footer">
                    <a href="@item.twitchDirectoryURL" class="card-link">Link to game directory</a>
                </div>
                <div class="card-footer">
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", routeValues: new { name = item.name }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </div>
            </div>
        </div>
        }
    </div>
</div>

@section Scripts {
    
}
